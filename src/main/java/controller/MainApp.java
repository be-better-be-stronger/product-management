package main.java.controller;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import main.java.model.Product;
import main.java.service.ProductService;
import main.java.service.ProductServiceImpl;

public class MainApp {
	private static final Scanner scanner = new Scanner(System.in);
	private static final ProductService service = new ProductServiceImpl();

	public static void main(String[] args) {
		while (true) {
			showMenu();
			int choice = getInputInt("Nh·∫≠p l·ª±a ch·ªçn: ");
			switch (choice) {
			case 1:
				addProduct();
				break;
			case 2:
				listAllProducts();
				break;
			case 3:
				findProductById();
				break;
			case 4:
				findProductByName();
				break;
			case 5:
				updateProduct();
				break;
			case 6:
				deleteProduct();
				break;
			case 7:
				listProductsByPage();
				break;
			case 8:
				addMultipleProducts();
				break;
			case 0:
				System.out.println("T·∫°m bi·ªát b·∫°n y√™u üíõ!");
				scanner.close();
				System.exit(0);
			default:
				System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá. Vui l√≤ng th·ª≠ l·∫°i!");
			}
		}
	}

	private static void showMenu() {
		System.out.println("\n===== QU·∫¢N L√ù S·∫¢N PH·∫®M =====");
		System.out.println("1. Th√™m s·∫£n ph·∫©m");
		System.out.println("2. Hi·ªÉn th·ªã t·∫•t c·∫£ s·∫£n ph·∫©m");
		System.out.println("3. T√¨m s·∫£n ph·∫©m theo ID");
		System.out.println("4. T√¨m s·∫£n ph·∫©m theo t√™n");
		System.out.println("5. C·∫≠p nh·∫≠t s·∫£n ph·∫©m");
		System.out.println("6. X√≥a s·∫£n ph·∫©m");
		System.out.println("7. Hi·ªÉn th·ªã s·∫£n ph·∫©m theo ph√¢n trang");
		System.out.println("8. Th√™m nhi·ªÅu s·∫£n ph·∫©m (Transaction)");
		System.out.println("0. Tho√°t ch∆∞∆°ng tr√¨nh");
		System.out.println("=============================");
	}

	private static void addProduct() {
		System.out.println("== Th√™m s·∫£n ph·∫©m m·ªõi ==");
		String name = getInputString("T√™n s·∫£n ph·∫©m: ");
		double price = getInputDouble("Gi√° s·∫£n ph·∫©m: ");
		int quantity = getInputInt("S·ªë l∆∞·ª£ng: ");
		Product product = new Product(name, price, quantity);
		service.addProduct(product);
		System.out.println("‚ûî Th√™m s·∫£n ph·∫©m th√†nh c√¥ng!");
	}

	private static void listAllProducts() {
		System.out.println("== Danh s√°ch t·∫•t c·∫£ s·∫£n ph·∫©m ==");
		System.out.printf("%-5s %-25s %-12s %-5s\n", 
				"ID", "T√™n s·∫£n ph·∫©m", "Gi√°", "S·ªë l∆∞·ª£ng");
		List<Product> products = service.getAllProducts();
		for (Product p : products) {
			System.out.printf("%-5d %-25s %-12.2f %-5d\n", 
					p.getId(), p.getName(), p.getPrice(), p.getQuantity());
		}
	}

	private static void findProductById() {
		int id = getInputInt("Nh·∫≠p ID s·∫£n ph·∫©m: ");
		Product product = service.findProductById(id);
		if (product != null) {
			System.out.printf("%-5s %-25s %-12s %-5s\n", 
					"ID", "T√™n s·∫£n ph·∫©m", "Gi√°", "S·ªë l∆∞·ª£ng");
			System.out.printf("%-5d %-25s %-12.2f %-5d\n", 
					product.getId(), product.getName(), product.getPrice(), product.getQuantity());
		} else {
			System.out.println("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!");
		}
	}

	private static void findProductByName() {
		String keyword = getInputString("Nh·∫≠p t·ª´ kh√≥a t√™n s·∫£n ph·∫©m: ");
		List<Product> products = service.findProductsByName(keyword);
		if (products.isEmpty()) {
			System.out.println("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!");
		} else {
			System.out.printf("%-5s %-25s %-12s %-5s\n", 
					"ID", "T√™n s·∫£n ph·∫©m", "Gi√°", "S·ªë l∆∞·ª£ng");
			for (Product p : products) {
				System.out.printf("%-5d %-25s %-12.2f %-5d\n", 
						p.getId(), p.getName(), p.getPrice(), p.getQuantity());
			}
		}
	}

	private static void updateProduct() {
		int id = getInputInt("Nh·∫≠p ID s·∫£n ph·∫©m c·∫ßn c·∫≠p nh·∫≠t: ");
		Product existing = service.findProductById(id);
		if (existing == null) {
			System.out.println("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m!");
			return;
		}
		String name = getInputString("T√™n s·∫£n ph·∫©m m·ªõi: ");
		double price = getInputDouble("Gi√° m·ªõi: ");
		int quantity = getInputInt("S·ªë l∆∞·ª£ng m·ªõi: ");

		existing.setName(name);
		existing.setPrice(price);
		existing.setQuantity(quantity);

		boolean updated = service.updateProduct(existing);
		if (updated) {
			System.out.println("‚ûî C·∫≠p nh·∫≠t th√†nh c√¥ng!");
		} else {
			System.out.println("C·∫≠p nh·∫≠t th·∫•t b·∫°i!");
		}
	}

	private static void deleteProduct() {
		int id = getInputInt("Nh·∫≠p ID s·∫£n ph·∫©m c·∫ßn x√≥a: ");
		boolean deleted = service.deleteProduct(id);
		if (deleted) {
			System.out.println("‚ûî X√≥a th√†nh c√¥ng!");
		} else {
			System.out.println("X√≥a th·∫•t b·∫°i!");
		}
	}

	private static void listProductsByPage() {
		int page = getInputInt("Nh·∫≠p s·ªë trang: ");
		int pageSize = getInputInt("Nh·∫≠p s·ªë s·∫£n ph·∫©m m·ªói trang: ");
		List<Product> products = service.getProductsByPage(page, pageSize);
		
		if (products.isEmpty()) {
			System.out.println("Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o trong trang n√†y!");
		} else {
			System.out.printf("%-5s %-25s %-12s %-5s\n", 
					"ID", "T√™n s·∫£n ph·∫©m", "Gi√°", "S·ªë l∆∞·ª£ng");
			for (Product p : products) {
				System.out.printf("%-5d %-25s %-12.2f %-5d\n", 
						p.getId(), p.getName(), p.getPrice(), p.getQuantity());
			}
		}
	}

	private static void addMultipleProducts() {
		int n = getInputInt("Nh·∫≠p s·ªë l∆∞·ª£ng s·∫£n ph·∫©m mu·ªën th√™m: ");
		List<Product> products = new ArrayList<>();
		for (int i = 0; i < n; i++) {
			System.out.println("== S·∫£n ph·∫©m th·ª© " + (i + 1) + " ==");
			String name = getInputString("T√™n s·∫£n ph·∫©m: ");
			double price = getInputDouble("Gi√° s·∫£n ph·∫©m: ");
			int quantity = getInputInt("S·ªë l∆∞·ª£ng: ");
			products.add(new Product(name, price, quantity));
		}
		boolean success = service.addMultipleProducts(products);
		if (success) {
			System.out.println("‚ûî Th√™m nhi·ªÅu s·∫£n ph·∫©m th√†nh c√¥ng!");
		} else {
			System.out.println("C√≥ l·ªói x·∫£y ra. Giao d·ªãch ƒë√£ rollback!");
		}
	}

	// C√°c h√†m h·ªó tr·ª£ nh·∫≠p li·ªáu
	private static int getInputInt(String prompt) {
		System.out.print(prompt);
		while (!scanner.hasNextInt()) {
			System.out.println("Sai ƒë·ªãnh d·∫°ng! Vui l√≤ng nh·∫≠p s·ªë nguy√™n.");
			scanner.next();
			System.out.print(prompt);
		}
		return scanner.nextInt();
	}

	private static double getInputDouble(String prompt) {
		System.out.print(prompt);
		while (!scanner.hasNextDouble()) {
			System.out.println("Sai ƒë·ªãnh d·∫°ng! Vui l√≤ng nh·∫≠p s·ªë th·ª±c.");
			scanner.next();
			System.out.print(prompt);
		}
		return scanner.nextDouble();
	}

	private static String getInputString(String prompt) {
		System.out.print(prompt);
		scanner.nextLine(); // clear buffer
		return scanner.nextLine();
	}
}
